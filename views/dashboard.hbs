<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>EcoSage</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.9/css/weather-icons.min.css">
    <style>
        :root {
            --color-primary: #05D9E8;
            --color-secondary: #01BAEF;
            --color-dark: #0B132B;
            --color-darker: #060C21;
            --color-accent: #FF2A6D;
            --color-success: #05FF9E;
            --color-warning: #FFD400;
            --color-danger: #FF5252;
            --color-neutral: #9FA7B0;
            --color-light: #F1F2F6;
            --card-bg: rgba(11, 19, 43, 0.7);
            --gradient-glow: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
            --box-shadow: 0 8px 32px 0 rgba(5, 217, 232, 0.15);
            --border-radius: 16px;
            --transition: all 0.3s ease;
            --blur-bg: blur(10px);
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Segoe UI', 'Roboto', sans-serif;
            background-color: var(--color-darker);
            background-image:
                radial-gradient(circle at 10% 20%, rgba(5, 217, 232, 0.1) 0%, transparent 25%),
                radial-gradient(circle at 90% 80%, rgba(1, 186, 239, 0.1) 0%, transparent 25%),
                radial-gradient(circle at 50% 50%, rgba(255, 42, 109, 0.05) 0%, transparent 50%);
            color: var(--color-light);
            min-height: 100vh;
            padding: 2rem 0;
            line-height: 1.5;
            overflow-x: hidden;
        }

        .container {
            max-width: 1280px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .dashboard {
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            grid-gap: 1.5rem;
            margin-top: 1rem;
        }

        /* Header */
        .dashboard-header {
            grid-column: span 12;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding: 0 1rem;
        }

        .dashboard-header__title {
            font-size: 2rem;
            font-weight: 700;
            background: var(--gradient-glow);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            letter-spacing: 1px;
            display: flex;
            align-items: center;
        }

        .dashboard-header__title i {
            margin-right: 0.75rem;
            font-size: 1.75rem;
            color: var(--color-primary);
            -webkit-text-fill-color: var(--color-primary);
        }

        /* Add this to your existing styles */
        .historical-data {
            grid-column: span 12;
        }

        .historical-table {
            width: 100%;
            border-collapse: collapse;
            overflow-x: auto;
        }

        .historical-table th,
        .historical-table td {
            padding: 0.75rem;
            text-align: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .historical-table th {
            color: var(--color-primary);
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .historical-table tr:hover {
            background-color: rgba(255, 255, 255, 0.03);
        }

        #historical-data-container {
            overflow-x: auto;
            width: 100%;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {

            .historical-table th,
            .historical-table td {
                padding: 0.5rem;
                font-size: 0.85rem;
            }
        }

        .dashboard-header__date {
            font-size: 1rem;
            color: var(--color-neutral);
            padding: 0.5rem 1rem;
            background: rgba(11, 19, 43, 0.4);
            border-radius: 30px;
            backdrop-filter: var(--blur-bg);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        /* Cards */
        .dashboard-card {
            background: var(--card-bg);
            border-radius: var(--border-radius);
            backdrop-filter: var(--blur-bg);
            overflow: hidden;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: var(--box-shadow);
            transition: var(--transition);
            display: flex;
            flex-direction: column;
        }

        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px 0 rgba(5, 217, 232, 0.2);
        }

        .dashboard-card__title {
            padding: 1.25rem;
            display: flex;
            align-items: center;
            font-weight: 600;
            font-size: 1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            color: var(--color-neutral);
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .dashboard-card__title i,
        .dashboard-card__title .wi {
            margin-right: 0.75rem;
            font-size: 1.5rem;
            color: var(--color-primary);
        }

        .dashboad-card__content {
            flex: 1;
            display: flex;
            padding: 1.5rem;
        }

        .dashboard-card__card-piece {
            display: flex;
            flex: 1;
            flex-direction: column;
        }

        .dashboard-card__link {
            color: var(--color-primary);
            text-decoration: none;
            padding: 0.75rem 1.25rem;
            margin-top: auto;
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            transition: var(--transition);
            border-top: 1px solid rgba(255, 255, 255, 0.05);
        }

        .dashboard-card__link:hover {
            background-color: rgba(5, 217, 232, 0.1);
        }

        .dashboard-card__link i {
            margin-left: 0.5rem;
        }

        /* Weather */
        .weather-days {
            display: flex;
            justify-content: space-between;
            width: 100%;
        }

        .weather-days__item {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 0.5rem;
            transition: var(--transition);
            border-radius: 10px;
        }

        .weather-days__item:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        .weather-days__title {
            font-size: 1rem;
            color: var(--color-light);
            margin-bottom: 0.5rem;
        }

        .weather-days__item:first-child .weather-days__title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--color-primary);
        }

        .weather-days__icon {
            font-size: 2.5rem;
            margin: 0.75rem 0;
            color: var(--color-primary);
            text-shadow: 0 0 10px rgba(5, 217, 232, 0.5);
        }

        .weather-days__item:first-child .weather-days__icon {
            font-size: 3.5rem;
        }

        .weather-days__humidity {
            font-size: 0.875rem;
            color: var(--color-neutral);
            background: rgba(5, 217, 232, 0.1);
            padding: 0.25rem 0.75rem;
            border-radius: 12px;
            margin-top: 0.5rem;
        }

        .weather-days__humidity:after {
            content: 'mm';
            margin-left: 2px;
        }

        .weather-days__item:first-child .weather-days__humidity:before {
            content: 'Hum: ';
        }

        /* Stats */
        .stats__item {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
            padding: 0.5rem;
        }

        .stats__title {
            font-size: 1rem;
            text-transform: uppercase;
            color: var(--color-neutral);
            margin-bottom: 0.5rem;
            letter-spacing: 1px;
        }

        .stats__icon {
            font-size: 1.75rem;
            margin: 0.5rem 0;
            color: var(--color-primary);
        }

        .stats__measure {
            display: flex;
            align-items: flex-start;
            justify-content: center;
            margin-top: 0.5rem;
        }

        .stats__value {
            font-size: 2.5rem;
            font-weight: 300;
            color: var(--color-light);
            line-height: 1;
        }

        .stats__unit {
            font-size: 1rem;
            color: var(--color-neutral);
            position: relative;
            margin-left: 0.25rem;
            margin-top: 0.25rem;
        }

        .stats__unit_celsius:before {
            content: 'Â°';
            position: absolute;
            top: -5px;
            left: -5px;
            font-size: 0.875rem;
        }

        .stats__unit_meter:after {
            content: '3';
            position: absolute;
            top: -5px;
            right: -5px;
            font-size: 0.675rem;
        }

        /* Status */
        .status {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem 0;
        }

        .status__icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        .status__text {
            font-size: 1.25rem;
            font-weight: 600;
            letter-spacing: 1px;
        }

        .status_success {
            color: var(--color-success);
        }

        .status_danger {
            color: var(--color-danger);
        }

        /* Switches */
        .light-switches {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
            width: 100%;
            padding: 0.5rem;
        }

        .switch {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            transition: var(--transition);
        }

        .switch:hover {
            background: rgba(255, 255, 255, 0.1);
        }

        .switch__name {
            font-size: 0.95rem;
            color: var(--color-light);
            font-weight: 500;
        }

        .switch__input {
            opacity: 0;
            position: absolute;
        }

        .switch__label {
            position: relative;
            display: inline-block;
            width: 3.5rem;
            height: 1.75rem;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 30px;
            cursor: pointer;
            transition: var(--transition);
        }

        .switch__label:before {
            content: '';
            position: absolute;
            width: 1.35rem;
            height: 1.35rem;
            border-radius: 50%;
            top: 0.2rem;
            left: 0.2rem;
            background-color: var(--color-light);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            transition: var(--transition);
        }

        .switch__input:checked+.switch__label {
            background-color: var(--color-primary);
            box-shadow: 0 0 10px rgba(5, 217, 232, 0.5);
        }

        .switch__input:checked+.switch__label:before {
            transform: translateX(1.75rem);
        }

        .switch__input:focus+.switch__label {
            box-shadow: 0 0 0 2px rgba(5, 217, 232, 0.5);
        }

        /* Logout Button */
        .logout-button-container {
            position: absolute;
            top: 2rem;
            right: 2rem;
        }

        .logout-button {
            display: flex;
            align-items: center;
            padding: 0.75rem 1.5rem;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 30px;
            color: var(--color-light);
            text-decoration: none;
            font-size: 0.875rem;
            transition: var(--transition);
            backdrop-filter: var(--blur-bg);
        }

        .logout-button:hover {
            background: rgba(255, 42, 109, 0.1);
            border-color: var(--color-accent);
            color: var(--color-accent);
        }

        .logout-button i {
            margin-right: 0.5rem;
        }

        /* Grid Layout */
        .weather {
            grid-column: span 8;
        }

        .temperature {
            grid-column: span 4;
        }

        .wifi,
        .alarm {
            grid-column: span 3;
        }

        .light {
            grid-column: span 6;
        }

        .power {
            grid-column: span 12;
            display: flex;
            flex-direction: column;
        }

        .power .dashboad-card__content {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 1rem;
        }

        .temperature-stats {
            display: flex;
            justify-content: space-around;
            width: 100%;
        }

        /* Sensor Toggles */
        .sensor-toggle {
            display: flex;
            justify-content: center;
            margin-top: 0.5rem;
        }

        .disabled-text {
            font-style: italic;
            color: var(--color-neutral);
        }

        /* Make dashboard responsive */
        @media (max-width: 1200px) {
            .weather {
                grid-column: span 9;
            }

            .temperature {
                grid-column: span 3;
            }

            .wifi,
            .alarm {
                grid-column: span 3;
            }

            .light {
                grid-column: span 6;
            }
        }

        @media (max-width: 992px) {
            .dashboard {
                grid-gap: 1rem;
            }

            .weather {
                grid-column: span 8;
            }

            .temperature {
                grid-column: span 4;
            }

            .wifi,
            .alarm {
                grid-column: span 4;
            }

            .light {
                grid-column: span 8;
            }

            .power .dashboad-card__content {
                grid-template-columns: repeat(3, 1fr);
            }
        }

        @media (max-width: 768px) {
            .dashboard-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }

            .weather,
            .temperature {
                grid-column: span 12;
            }

            .wifi,
            .alarm {
                grid-column: span 6;
            }

            .light {
                grid-column: span 12;
            }

            .power .dashboad-card__content {
                grid-template-columns: repeat(2, 1fr);
            }

            .light-switches {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 576px) {
            .dashboard {
                grid-gap: 0.75rem;
            }

            .weather-days__item:not(:first-child) {
                display: none;
            }

            .weather-days__item:first-child {
                flex: 1;
            }

            .wifi,
            .alarm {
                grid-column: span 12;
            }

            .power .dashboad-card__content {
                grid-template-columns: 1fr;
            }

            .stats__value {
                font-size: 2rem;
            }

            .logout-button-container {
                position: static;
                margin-bottom: 1rem;
                display: flex;
                justify-content: flex-end;
            }
        }

        /* Animation pulse effect for status icons */
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(5, 217, 232, 0.7);
            }

            70% {
                box-shadow: 0 0 0 10px rgba(5, 217, 232, 0);
            }

            100% {
                box-shadow: 0 0 0 0 rgba(5, 217, 232, 0);
            }
        }

        .status__icon {
            border-radius: 50%;
            animation: pulse 2s infinite;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .status_success .status__icon {
            box-shadow: 0 0 0 rgba(5, 255, 158, 0.7);
            animation: pulse 2s infinite;
        }

        .status_danger .status__icon {
            box-shadow: 0 0 0 rgba(255, 82, 82, 0.7);
            animation: pulse 2s infinite;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="logout-button-container">
            <a href="/logout" class="logout-button" title="Logout">
                <i class="fas fa-leaf"></i> Logout
            </a>
        </div>

        <div class="dashboard-header">
            <h1 class="dashboard-header__title"><i class="fas fa-seedling"></i>Eco Sage Soil Monitoring System (ESSMS)
            </h1>

            <div class="dashboard-header__date" id="date">Sunday, October 19th</div>
        </div>

        <div class="dashboard">
            <div class="dashboard-card weather">
                <div class="dashboard-card__title"><i class="wi wi-day-sunny"></i>FEEDBACK</div>
                <div class="dashboad-card__content">
                    <div class="dashboard-card__card-piece">
                        <div class="weather-days" id="feedback">

                        </div>
                    </div>
                </div>
                <a href="#" class="dashboard-card__link" tabindex="1">View in details<i class="fas   "></i></a>
            </div>

            <div class="dashboard-card temperature">
                <div class="dashboard-card__title"><i class="wi wi-thermometer"></i>Temperature</div>
                <div class="dashboad-card__content">
                    <div class="dashboard-card__card-piece">
                        <div class="temperature-stats">
                            <div class="stats__item">

                                <div class="stats__icon"><i class="wi wi-day-cloudy"></i></div>
                                <div class="stats__measure">
                                    <div class="stats__value" id="temp">22</div>
                                    <div class="stats__unit stats__unit_celsius">C</div>
                                </div>
                                <div class="sensor-toggle">
                                    <div class="switch">
                                        <span class="switch__name">Sensor</span>
                                        <input type="checkbox" class="switch__input" id="temp-toggle" checked>
                                        <label for="temp-toggle" class="switch__label"></label>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <a href="#" class="dashboard-card__link" tabindex="1">Edit<i class="fas   "></i></a>
            </div>
            <div class="dashboard-card power">
                <div class="dashboard-card__title"><i class="fas fa-chart-bar"></i>Soil Analysis Data</div>
                <div class="dashboad-card__content">
                    <div class="dashboard-card__card-piece">
                        <div class="stats__item">
                            <div class="stats__title">Water</div>
                            <div class="stats__icon"><i class="wi wi-raindrop"></i></div>
                            <div class="stats__measure">
                                <div class="stats__value" id="moisture">{{moisture}}</div>

                            </div>
                            <div class="sensor-toggle">
                                <div class="switch">
                                    <span class="switch__name">Sensor</span>
                                    <input type="checkbox" class="switch__input" id="moisture-toggle" checked>
                                    <label for="moisture-toggle" class="switch__label"></label>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="dashboard-card__card-piece">
                        <div class="stats__item">
                            <div class="stats__title">Humidity</div>
                            <div class="stats__icon"><i class="fas fa-tint"></i></div>
                            <div class="stats__measure">
                                <div class="stats__value" id="humidity">49</div>
                                <div class="stats__unit stats__unit_power">%</div>
                            </div>
                            <div class="sensor-toggle">
                                <div class="switch">
                                    <span class="switch__name">Sensor</span>
                                    <input type="checkbox" class="switch__input" id="humidity-toggle" checked>
                                    <label for="humidity-toggle" class="switch__label"></label>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="dashboard-card__card-piece">
                        <div class="stats__item">
                            <div class="stats__title">Nitrogen</div>
                            <div class="stats__icon"><i class="fas fa-atom"></i></div>
                            <div class="stats__measure">
                                <div class="stats__value" id="nitrogen">37</div>
                                <div class="stats__unit "></div>
                            </div>
                            <div class="sensor-toggle">
                                <div class="switch">
                                    <span class="switch__name">Sensor</span>
                                    <input type="checkbox" class="switch__input" id="nitrogen-toggle" checked>
                                    <label for="nitrogen-toggle" class="switch__label"></label>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="dashboard-card__card-piece">
                        <div class="stats__item">
                            <div class="stats__title">Phosphorus</div>
                            <div class="stats__icon"><i class="fas fa-flask"></i></div>
                            <div class="stats__measure">
                                <div class="stats__value" id="phosphorous">37</div>
                                <div class="stats__unit "></div>
                            </div>
                            <div class="sensor-toggle">
                                <div class="switch">
                                    <span class="switch__name">Sensor</span>
                                    <input type="checkbox" class="switch__input" id="phosphorous-toggle" checked>
                                    <label for="phosphorous-toggle" class="switch__label"></label>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="dashboard-card__card-piece">
                        <div class="stats__item">
                            <div class="stats__title">Potassium</div>
                            <div class="stats__icon"><i class="fas fa-vial"></i></div>
                            <div class="stats__measure">
                                <div class="stats__value" id="pottasium">37</div>
                                <div class="stats__unit "></div>
                            </div>
                            <div class="sensor-toggle">
                                <div class="switch">
                                    <span class="switch__name">Sensor</span>
                                    <input type="checkbox" class="switch__input" id="pottasium-toggle" checked>
                                    <label for="pottasium-toggle" class="switch__label"></label>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="dashboard-card historical-data">
                <div class="dashboard-card__title"><i class="fas fa-history"></i>Historical Data (10 min
                    intervals)</div>
                <div class="dashboad-card__content">
                    <div class="dashboard-card__card-piece">
                        <div id="historical-data-container">
                            <table class="historical-table">
                                <thead>
                                    <tr>
                                        <th>Time</th>
                                        <th>Moisture</th>
                                        <th>Nitrogen</th>
                                        <th>Phosphorus</th>
                                        <th>Potassium</th>
                                        <th>Temp</th>
                                        <th>Humidity</th>
                                    </tr>
                                </thead>
                                <tbody id="historical-data-body">
                                    <!-- Historical data will be inserted here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <a href="#" class="dashboard-card__link" tabindex="1">View full history<i
                        class="fas fa-chevron-right"></i></a>
            </div>

            <div class="dashboard-card weather">
                <div class="dashboard-card__title"><i class="wi wi-day-sunny"></i>Past 10 Minutes Feedback</div>
                <div class="dashboad-card__content">
                    <div class="dashboard-card__card-piece">
                        <div class="weather-days" id="feed">

                        </div>
                    </div>
                </div>
                <a href="#" class="dashboard-card__link" tabindex="1">View in details<i class="fas   "></i></a>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>

        const socket = io();

        // Initialize sensor states
        const sensorStates = {
            moisture: true,
            humidity: true,
            nitrogen: true,
            phosphorous: true,
            pottasium: true,
            temperature: true
        };

        // Set up toggle event listeners
        document.getElementById("moisture-toggle").addEventListener("change", function () {
            sensorStates.moisture = this.checked;
            updateSensorDisplay("moisture");
        });

        document.getElementById("humidity-toggle").addEventListener("change", function () {
            sensorStates.humidity = this.checked;
            updateSensorDisplay("humidity");
        });

        document.getElementById("nitrogen-toggle").addEventListener("change", function () {
            sensorStates.nitrogen = this.checked;
            updateSensorDisplay("nitrogen");
        });

        document.getElementById("phosphorous-toggle").addEventListener("change", function () {
            sensorStates.phosphorous = this.checked;
            updateSensorDisplay("phosphorous");
        });

        document.getElementById("pottasium-toggle").addEventListener("change", function () {
            sensorStates.pottasium = this.checked;
            updateSensorDisplay("pottasium");
        });

        document.getElementById("temp-toggle").addEventListener("change", function () {
            sensorStates.temperature = this.checked;
            updateSensorDisplay("temp");
        });

        // Function to update display based on sensor state
        function updateSensorDisplay(sensorId) {
            const sensorElement = document.getElementById(sensorId);
            console.log(sensorElement)
            const stateKey = sensorId === "temp" ? "temperature" :
                sensorId === "pottasium" ? "pottasium" : sensorId;

            if (!sensorStates[stateKey]) {
                sensorElement.innerHTML = '<span class="disabled-text">Sensor Off</span>';
            } else {
                // If turning back on, we'll get the current value from the next update
                // For now, we can show the last known value or default
                if (sensorId === "temp") {
                    sensorElement.innerText = lastData.temperature || "22";
                } else if (sensorId === "pottasium") {
                    sensorElement.innerText = lastData.pottasium || "37";
                } else {
                    sensorElement.innerText = lastData[sensorId] || "37";
                }
            }
        }

        // Store last received data
        let lastData = {
            moisture: "{{moisture}}",
            humidity: "49",
            nitrogen: "37",
            phosphorus: "37",
            pottasium: "37",
            temperature: "22"
        };

        // Update UI when new data arrives
        socket.on("sensorUpdate", (data) => {
            console.log(data);
            lastData = data;

            // Update each sensor value only if the sensor is enabled
            if (sensorStates.moisture) {
                document.getElementById("moisture").innerText = data.moisture;
            }

            if (sensorStates.humidity) {
                document.getElementById("humidity").innerText = data.humidity;
            }

            if (sensorStates.nitrogen) {
                document.getElementById("nitrogen").innerText = data.nitrogen;
            }

            if (sensorStates.phosphorous) {
                document.getElementById("phosphorous").innerText = data.phosphorus;
            }

            if (sensorStates.pottasium) {
                document.getElementById("pottasium").innerText = data.potassium;
            }

            if (sensorStates.temperature) {
                document.getElementById("temp").innerText = data.temperature;
            }

            document.getElementById("feedback").innerText = data.ai;

            // Show current date in this format "Sunday, October 19th
            const date = new Date();
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            document.getElementById("date").innerText = date.toLocaleDateString('en-US', options);

            //display live time
            setInterval(() => {
                const time = new Date();
                document.getElementById("date").innerText = time.toLocaleDateString('en-US', options) + " " + time.toLocaleTimeString();
            }, 1000);
        });
        // Add this function to your JavaScript
        function fetchHistoricalData() {
            fetch('/pastData')
                .then(response => response.text())
                .then(data => {

                    try {
                        // Parse the data (handling both JSON and text formats)
                        let parsedData;
                        try {
                            parsedData = JSON.parse(data);
                        } catch (e) {
                            // If it's not JSON, parse the text format
                            const jsonPart = data.match(/\{.*\}/)[0];
                            parsedData = JSON.parse(jsonPart);
                        }
                        //display feedback by pasesedData.aiFeedback in feed div
                        document.getElementById("feed").innerText = parsedData.aiFeedback;

        
                      
                    }catch (error) {
                        console.error("Error parsing data:", error);
                    }
                })
                .catch(error => {
                    console.error("Error fetching historical data:", error);
                });
        }

        // Fetch historical data immediately when page loads
        fetchHistoricalData();

        // Set up interval to fetch historical data every 10 minutes
        setInterval(fetchHistoricalData, 600000); // 600000 ms = 10 minutes
        // Add this after the fetchHistoricalData function
        function populateInitialHistoricalData() {
            // Get the current time
            const now = new Date();

            // Create some sample data points going back
            for (let i = 5; i >= 0; i--) {
                const pastTime = new Date(now.getTime() - (i * 10 * 60 * 1000)); // i*10 minutes ago
                const timestamp = pastTime.toLocaleTimeString();

                // Generate data with small random variations for demonstration
                const variation = (i) => (Math.random() * 2 - 1) * i;

                fetch('/pastData')
                    .then(response => response.text())
                    .then(data => {
                        try {
                            // Parse the base data
                            let parsedData;
                            try {
                                parsedData = JSON.parse(data);
                                parsedData=parsedData.avgData
                            } catch (e) {
                                const jsonPart = data.match(/\{.*\}/)[0];
                                parsedData = JSON.parse(jsonPart);
                            }

                            // Add variations to create historical trend
                            const historicalData = {
                                moisture: Math.max(0, parsedData.moisture + variation(i)),
                                nitrogen: Math.max(0, parsedData.nitrogen + variation(i / 5)),
                                phosphorus: Math.max(0, parsedData.phosphorus + variation(i / 5)),
                                potassium: Math.max(0, parsedData.potassium + variation(i / 5)),
                                temperature: Math.max(0, parsedData.temperature + variation(i / 10)),
                                humidity: Math.max(0, parsedData.humidity + variation(i / 2))
                            };

                            // Create a row
                            const row = document.createElement('tr');
                            row.innerHTML = `
                        <td>${timestamp}</td>
                        <td>${historicalData.moisture.toFixed(1)}</td>
                        <td>${historicalData.nitrogen.toFixed(1)}</td>
                        <td>${historicalData.phosphorus.toFixed(1)}</td>
                        <td>${historicalData.potassium.toFixed(1)}</td>
                        <td>${historicalData.temperature.toFixed(1)}</td>
                        <td>${historicalData.humidity.toFixed(1)}</td>
                    `;

                            // Add the row to the table
                            console.log(historicalData)
                            const tableBody = document.getElementById('historical-data-body');
                            tableBody.appendChild(row);
                        } catch (error) {
                            console.error("Error processing initial historical data:", error);
                        }
                    })
                    .catch(error => {
                        console.error("Error fetching initial historical data:", error);
                    });
            }
        }

        // Call this function after page loads
        document.addEventListener('DOMContentLoaded', function () {
            populateInitialHistoricalData();
        });
    </script>
</body>

</html>